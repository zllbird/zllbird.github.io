<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coder-bird</title>
    <link>https://zllbird.github.io/</link>
    <description>Recent content on Coder-bird</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Copyright Text</copyright>
    <lastBuildDate>Fri, 14 Jul 2017 18:08:47 +0800</lastBuildDate>
    <atom:link href="https://zllbird.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>再遇见</title>
      <link>https://zllbird.github.io/2017/07/14/%E5%86%8D%E9%81%87%E8%A7%81/</link>
      <pubDate>Fri, 14 Jul 2017 18:08:47 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2017/07/14/%E5%86%8D%E9%81%87%E8%A7%81/</guid>
      <description>

&lt;h1 id=&#34;再遇见-若今生还能再见:52bce0001acd568ebdbae4304a0db1ba&#34;&gt;再遇见——若今生还能再见&lt;/h1&gt;

&lt;h3 id=&#34;但为君故:52bce0001acd568ebdbae4304a0db1ba&#34;&gt;但为君故&lt;/h3&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;像个演员，一直在练习。若今生还能与你再遇见，那时的我该如何表演
——飞鸟&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;从地铁口出来时，不经意间，瞥见了那个身影。明明那么笃定，她不会出现在这个城市里，脚步却不自觉的跟了过去，眼睛也在骗自己。&lt;/p&gt;

&lt;p&gt;在人群中很努力的往前挤，想靠近那个身影，但却不知道为什么。明明知道没有可能，但心跳却在加速，手莫名的撺的很紧，我也不知道我到底在期待什么，只知道靠近一点，再近一点。&lt;/p&gt;

&lt;p&gt;终于在拐弯口，看清了侧颜。也终于…放缓了脚本。好像失去了什么，又好像，不曾拥有过…只知道，这种怅然若失的感觉很真实，很难受，很低落。&lt;/p&gt;

&lt;p&gt;也很，
可笑&lt;/p&gt;

&lt;h3 id=&#34;红泥火炉:52bce0001acd568ebdbae4304a0db1ba&#34;&gt;红泥火炉&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;绿蚁新醅酒
红泥小火炉
往来天欲雪
能…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;喝酒这个事情，最享受也最害怕的事情，都莫过于无人陪同。独斟，独酌，然后独饮，最后&amp;hellip;独醉。&lt;/p&gt;

&lt;p&gt;醒来后，好长时间都没有恍过来，自己在哪个城市，或者说，没有恍过来自己在她不在的城市&amp;hellip;&lt;/p&gt;

&lt;p&gt;人最害怕的莫过于，在某个瞬间，怅然若失。明不明白其实已经没有那么重要，后背一下子失去了力量，啪的倒入到床上。&lt;/p&gt;

&lt;p&gt;然后大眼睛盯着天花板，想念那夜的星光&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;夜如何其-夜未央:52bce0001acd568ebdbae4304a0db1ba&#34;&gt;夜如何其？夜未央。&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;我问狗友，爱情里最凄凉的用词是不是，好久不见。
狗友一听，还真挺凄凉的，但随即又摇了摇头，说，&amp;rsquo;应该是，对不起，让一让&amp;rsquo;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;翻来复去的睡不着。
一直在想，如果今天或者未来的某一天，再遇见。我该如何说出第一句话，又该说些什么呢&amp;ndash;好久不见吗？
思绪牵扯着记忆，我在床上比划着，一字一句推敲着。一会儿眉头紧锁，又一会儿摇头晃脑，努力练习着微笑，努力练习着洒脱，就好像，一个演员…&lt;/p&gt;

&lt;p&gt;“哈哈哈哈哈哈”…
当意识到自己像个演员的时候，也终于被自己的蠢逗笑了。也终于明白为何陈奕迅那首好久不见为何是用卓别林的电影为mv背景，再大的悲伤你也只能笑出来…亦或许，我应该先学会“演，视而不见”&lt;/p&gt;

&lt;p&gt;笑累了，我哼着演员入睡。
我好像做了一个梦，在未来的某个夏天，还是那片海岸线。你白衣飘飘，笑靥如花，我抬抬手，仍然不知如何开口，你突然撅起鼻子，对我说，嘿，想我了没…
我又笑了，很干净，很走心的那种…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>不如先学会成长</title>
      <link>https://zllbird.github.io/2017/02/26/%E4%B8%8D%E5%A6%82%E5%85%88%E5%AD%A6%E4%BC%9A%E6%88%90%E9%95%BF/</link>
      <pubDate>Sun, 26 Feb 2017 10:24:12 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2017/02/26/%E4%B8%8D%E5%A6%82%E5%85%88%E5%AD%A6%E4%BC%9A%E6%88%90%E9%95%BF/</guid>
      <description>

&lt;h2 id=&#34;不如先学会成长:b88ae6a27c7ce650b5d1c9df2ad68659&#34;&gt;不如先学会成长&lt;/h2&gt;

&lt;p&gt;成长也许是好事儿，也许是坏事儿，但却是一件不得不的事儿。——题记&lt;/p&gt;

&lt;p&gt;犹记得这句话是我刚来北京的时候，桃子和我说过的，我一直记到现在。因此，在大多数我不得不面对的时候，我就会自我安慰一句，这是成长，这是不得不的事儿&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;既然能做到放弃-那应该学会坦然:b88ae6a27c7ce650b5d1c9df2ad68659&#34;&gt;既然能做到放弃，那应该学会坦然&amp;hellip;&lt;/h3&gt;

&lt;p&gt;这不是嘴炮，这的确很难&amp;hellip;&lt;/p&gt;

&lt;p&gt;‘分手’这两个字不难说出口，难的是，从此以后断了念想。虽然作为旁观者，我们可以劝故事的主角（暂且代号狗子吧），狗子同学，劝他断了变断了，从此天涯一方，各自生活&amp;hellip;但，但，但，历经故事的不是我们，关心和在意，怎么可能说断就断&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;可，又能怎样？可，还能怎样。不过是分手，终究有一个人要先走。&lt;/strong&gt;
劝一个人放弃，能佐证，能分析，能告诉他值与不值。但劝一个人放下，就好像劝一个人别再犯傻，难道他真的不知道其中的道理吗？只是遗憾，道理他都懂，可那又能怎么样，历经的那些时光，不可能说忘就能忘。可，就算不忘，又能怎样，还能怎样&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;各自生活-也请不负时光:b88ae6a27c7ce650b5d1c9df2ad68659&#34;&gt;各自生活，也请不负时光&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;生活其实是一个很微妙的事情，所有的千丝万缕总能找到一个聚焦点。只是害怕，这个聚焦的点突然崩塌，然后生活便只剩下了活&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;狗子分手后，就只剩下了活着。他并不是没了梦想，但似乎热情不在。他拍着胸脯跟我们说，他要挣钱，努力挣钱，&lt;strong&gt;钱，钱，钱！！！&lt;/strong&gt;若真问他，挣钱为何？
他支吾半天，然后嚣张的告诉我们，“有钱啥不能干？”&amp;hellip;&lt;/p&gt;

&lt;p&gt;写这篇文字之前，我还一直在劝狗子回北京。这样那样的劝说，我始终相信，对于着急挣钱的狗子来说，回北京是捷径，那种看的见摸得着的捷径。但文行至此，我猛地醒了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;或许他不是缺了钱，而是曾经为之不顾一切的已不在。不以挣钱去填补时光，难道真要赤裸裸的告诉这个世界，我很迷茫？但，或许，他真的很迷茫&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;所以，我们看到真实的他，在止步不前。我们看到真实的他，在彷徨，来来回回，去去留留的彷徨。亦或许，更赤裸的说——&lt;strong&gt;他畏惧了&lt;/strong&gt;。再然后，时间却在他身边无情的流逝着&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;悲欢离合-喜怒哀乐:b88ae6a27c7ce650b5d1c9df2ad68659&#34;&gt;悲欢离合，喜怒哀乐&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;不如不如，先去历经。不如不如，先学会成长。——飞鸟&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;人应该有梦想。但若真没有，又何必强加一个梦想呢，不妨先让岁月沉淀。
趁着我们还未老，趁着还能吃烧烤。多去认识一些人，多去见见姑娘，历经百态，才知喜怒哀乐。&lt;/p&gt;

&lt;p&gt;故事是故事，故事可以写一个——完，然后不问不管不顾。但生活却是生活，会有好多故事，好多人和好多悲欢离合。&lt;/p&gt;

&lt;p&gt;所以，我大概会这么劝狗子或者说，狗子们。&lt;/p&gt;

&lt;p&gt;“无论是走是留，都要尝试一下改变，新的人，新的环境，哪怕只是新的袜子和新的鼠标垫，至少让自己看起来，不太一样&amp;hellip;然后，可能会真的，不太一样。”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>点点离人泪——天生不是情造</title>
      <link>https://zllbird.github.io/2017/02/07/%E7%82%B9%E7%82%B9%E7%A6%BB%E4%BA%BA%E6%B3%AA%E5%A4%A9%E7%94%9F%E4%B8%8D%E6%98%AF%E6%83%85%E9%80%A0/</link>
      <pubDate>Tue, 07 Feb 2017 18:42:34 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2017/02/07/%E7%82%B9%E7%82%B9%E7%A6%BB%E4%BA%BA%E6%B3%AA%E5%A4%A9%E7%94%9F%E4%B8%8D%E6%98%AF%E6%83%85%E9%80%A0/</guid>
      <description>

&lt;h2 id=&#34;点点离人泪-天生不是情造:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;点点离人泪——天生不是情造&lt;/h2&gt;

&lt;p&gt;春色三分，两份尘土，一份流水。细看来，不是杨花，点点是离人泪。 ——苏轼&lt;/p&gt;

&lt;p&gt;我最亲爱的 你过的怎麼样 没我的日子 你别来无恙 ——张惠妹&lt;/p&gt;

&lt;h3 id=&#34;故事结束在开始之前:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;故事结束在开始之前&lt;/h3&gt;

&lt;p&gt;“叮叮”&lt;/p&gt;

&lt;p&gt;“我明天到首都机场，下午五点，来接我”&lt;/p&gt;

&lt;p&gt;陌生的号码，陌生的短信，但他却知道是谁——一个已经音信全无三年多的人。他握着手机犹豫了一下，然后拨通了一个号码&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;刚刚说了再见又再见:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;刚刚说了再见又再见&lt;/h3&gt;

&lt;p&gt;天灰蒙蒙的，分不清是阴还是雾霾，但飞机如约的晚点了，亦如既往。&lt;/p&gt;

&lt;p&gt;拖拖拉拉的终于取回了托运的行李，她开始在人群中找寻那个熟悉的身影。还是习惯找寻浅蓝色的身影，亦或许她也期待着，过去并没有过去&amp;hellip;&lt;/p&gt;

&lt;p&gt;“别乱看了，我在这里”&lt;/p&gt;

&lt;p&gt;她看到了他对她在招手，浅灰色的上衣，黑色的裤子。有点熟悉，又有点陌生。&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;“来，我拉着吧”&lt;/p&gt;

&lt;p&gt;她唯唯诺诺的跟在他身后，却一直犹豫着，不知道怎么张口。怎么解释自己的消失，怎么解释自己的苦衷。&lt;/p&gt;

&lt;p&gt;“喂，这几年过的怎么样？有没有找新的女朋友”她终究是张了口，却意外的，还是先关心他。&lt;/p&gt;

&lt;p&gt;他没有回头，往前走着，慢慢的说着。&lt;/p&gt;

&lt;p&gt;“回来之前没打听一下我？我也就这么回事儿吧，谈了几个，但性格不合吧，也就没长。你呢？”&lt;/p&gt;

&lt;p&gt;她很想知道他近况，但听别人说，终究不如听他讲。&lt;/p&gt;

&lt;p&gt;她有些郁闷，又有些窃喜。但似乎又有些不一样，她以为会絮絮叨叨说很久，却没想到，&lt;/p&gt;

&lt;p&gt;只字片语，道尽沧桑。&lt;/p&gt;

&lt;p&gt;“也和你一样&amp;hellip;”&lt;/p&gt;

&lt;h3 id=&#34;对不起-走错片场了:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;对不起，走错片场了&lt;/h3&gt;

&lt;p&gt;“对了，我通知了隆隆他们，估计今晚他们都会来吧”&lt;/p&gt;

&lt;p&gt;他拉着箱子往前走着，也不知道该说什么了，分开的时间太久。久到自己都有点忘了以前说什么，只留下一贯的动作，一贯的习惯。熟悉的是习惯，而陌生了的是语言。&lt;/p&gt;

&lt;p&gt;“景景，康祺，大奎和秦朝都会来？”&lt;/p&gt;

&lt;p&gt;“嗯。都会，隆隆去安排了。”&lt;/p&gt;

&lt;p&gt;“康其还是那样懵懵的吗？大奎还是那么激动吗？还有景景，是不是还是那么傻？对了对了，隆隆和他女朋友发展成什么样子了。秦朝呢，还是那么萌，有人要了吗？&amp;hellip;”&lt;/p&gt;

&lt;p&gt;被一大串疑问堵死了，他也不知道该如何作答了。他笑了笑。&lt;/p&gt;

&lt;p&gt;“一会儿你就全见到了，估计还有可能看到隆隆的儿子了呢”&lt;/p&gt;

&lt;p&gt;他不自觉的笑了一下，似乎也没有什么改变。还是那些人，还是那些故事，就好像只有她不小心走错了片场，错过了中间空白的时光。&lt;/p&gt;

&lt;h3 id=&#34;这我就不高兴了:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;这我就不高兴了&lt;/h3&gt;

&lt;p&gt;“这次是去哪家吃火锅”&lt;/p&gt;

&lt;p&gt;系好安全带，她转过头，问道。&lt;/p&gt;

&lt;p&gt;“这次估计不能不吃火锅了，定了烤肉。估计他们已经在那等我们了。要不，我打电话给隆隆让他重新找家火锅？”&lt;/p&gt;

&lt;p&gt;看着他询问的眼神，她却没有和以前一样任着性子，虽然很想说，再找家吃火锅吧。但话到嘴边&lt;/p&gt;

&lt;p&gt;“不用啦，吃烤肉也挺好的”&lt;/p&gt;

&lt;p&gt;说完后，她苦笑了一下。以前的她，高兴起来，可以花光积蓄买礼物坐着硬座一晚上去宝鸡只为见他一面，不高兴的时候，直接甩了手机，让他干着急一晚上。那个时候，还真是任性啊。&lt;/p&gt;

&lt;p&gt;“哦？那吃烤肉吧，看样子，这两年你变了不少”&lt;/p&gt;

&lt;p&gt;“嗯，变得更加坚强了。”她没有说完整，其实经过那段遗憾，她已经变得更加坚强。“我想我想你一定喜欢，现在的我，学会了你最爱的开朗。”&lt;/p&gt;

&lt;p&gt;她还是没忍住，这样半认真的说了出来。&lt;/p&gt;

&lt;p&gt;“嗯，有可能吧。我们快到了，我打个电话让大奎出来接一下”&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;关系虽然不再一样-关心却怎么能说断就断:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;关系虽然不再一样，关心却怎么能说断就断&lt;/h3&gt;

&lt;p&gt;“喂，想什么呢，问你呢？”&lt;/p&gt;

&lt;p&gt;他被隆隆肘了一下，从记忆中回来。看着满桌的菜，才恍惚过来自己还在餐桌上。&lt;/p&gt;

&lt;p&gt;“嗯，当然，你刚回来，有任何问题和事儿直接跟我说就行。咱俩谁跟谁啊”他拍拍胸脯，信誓旦旦的说着。&lt;/p&gt;

&lt;p&gt;说完，他其实就后悔了。&lt;/p&gt;

&lt;p&gt;有些故事，结束了就是结束了，虽然记忆未曾老去，但终究已经过去了。&lt;/p&gt;

&lt;p&gt;“这是你说的哈，那我就不客气了”&lt;/p&gt;

&lt;p&gt;他怔怔的看着她。然后莫名的笑了，刚才那丝悔意也消失了。&lt;/p&gt;

&lt;p&gt;关系虽然不再一样，关心却怎么能说断就断呢。&lt;/p&gt;

&lt;p&gt;“嗯。有事儿尽管找我”&lt;/p&gt;

&lt;h3 id=&#34;从未说过分手-我们能不能只算冷战:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;从未说过分手，我们能不能只算冷战&lt;/h3&gt;

&lt;p&gt;“马上到酒店了，让你别喝你还非要喝”&lt;/p&gt;

&lt;p&gt;她听着他絮叨着，好像时光从未变过，好像昨日仍然在。&lt;/p&gt;

&lt;p&gt;借着酒劲，她觉得自己又回到了从前，可以任性，可以冲动，可以为所欲为。&lt;/p&gt;

&lt;p&gt;下了车，凉意袭来，酒反而醒了一些。但她似乎还想醉下去，&lt;/p&gt;

&lt;p&gt;或者，酒本不醉人，她只是一厢情愿的自醉。&lt;/p&gt;

&lt;p&gt;“喂，我好像从没和你说过分手，我们能不能只算冷战。”&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;“好了，你醉了。快进酒店吧”&lt;/p&gt;

&lt;p&gt;她的酒醒了，或者说，梦也醒了。她笑了一下，有些东西终究是不能补偿。&lt;/p&gt;

&lt;p&gt;“你还是不能原谅我吗？”&lt;/p&gt;

&lt;p&gt;她说这句话已经很勉强了，人生不就是这样，总有些事情需要一下勉强。&lt;/p&gt;

&lt;p&gt;“能再看到你的模样，还有什么错，不能被原谅。”他笑了。“过去就过去了，别再想着从前了，人要往前看不是吗？”&lt;/p&gt;

&lt;p&gt;她看的出，故事到这里真的画上句号了。她知道，勉强不来了&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;别来无恙:d554fdb5eb7286f92291c9ef00869eb9&#34;&gt;别来无恙&lt;/h3&gt;

&lt;p&gt;“好了，早点休息吧。”&lt;/p&gt;

&lt;p&gt;他转过身，安静的回到车里，慢慢的开着拐入夜色。&lt;/p&gt;

&lt;p&gt;开着开着，眼泪终究没忍住，默默的从脸颊滑落。只好把车子停在一边，仰着头，&lt;/p&gt;

&lt;p&gt;假装没有哭过&amp;hellip;&lt;/p&gt;

&lt;p&gt;能做到放弃，终究做不到坦然&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>切换IM方案以及流程</title>
      <link>https://zllbird.github.io/2016/08/31/%E5%88%87%E6%8D%A2im%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 31 Aug 2016 18:42:34 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/08/31/%E5%88%87%E6%8D%A2im%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E6%B5%81%E7%A8%8B/</guid>
      <description>

&lt;h2 id=&#34;切换im方案以及流程:e85de262239ed3e1368d4a8096a70e96&#34;&gt;切换IM方案以及流程&lt;/h2&gt;

&lt;p&gt;新版本和旧版本不相互通信，虽然这个逻辑很蛋疼，但最安全。&lt;/p&gt;

&lt;h3 id=&#34;im迁移:e85de262239ed3e1368d4a8096a70e96&#34;&gt;IM迁移&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;用户迁移，直接从服务器重新生成用户使用。&lt;/li&gt;
&lt;li&gt;基础消息类型迁移，主要是逻辑迁移，UI不动&lt;/li&gt;
&lt;li&gt;自定义消息类型迁移，主要是逻辑迁移，UI不动（较为繁琐和复杂，主要是处理各种自定义消息的逻辑） &lt;strong&gt;（困难）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;预计周期，前端一个周，后端也要大半个周。
风险：自定义消息的处理&lt;/p&gt;

&lt;h3 id=&#34;本地化数据迁移:e85de262239ed3e1368d4a8096a70e96&#34;&gt;本地化数据迁移&lt;/h3&gt;

&lt;p&gt;本地数据的迁移风险很高。环信是登录后才能查阅本地数据，所以如果到时候环信停了，这个功能就相当于白做了。因为登不上环信，也取不出来本地聊天记录。
* 本地会话转存数据库
* 本地聊天记录转存数据库&lt;/p&gt;

&lt;p&gt;预计周期：2-3天。
风险: 环信关闭。&lt;/p&gt;

&lt;h3 id=&#34;如果新旧版本兼容:e85de262239ed3e1368d4a8096a70e96&#34;&gt;如果新旧版本兼容&lt;/h3&gt;

&lt;p&gt;两个方案：
1. 环信和百川中间搭建消息路由。（这个逻辑上可以，但实践基本不可能，我们不可能要环信去请求百川服务的&amp;hellip;）
2. 新版本同时发送新旧两个消息。（需要新版本同时处理两个消息的收发，会不稳定，主要不稳定体现在环信和百川两个长连接服务会抢夺资源，造成不稳定，开发周期和风险也很高，最蛋疼的是，环信如果被关闭后，这个直接没用了）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>最好的时代，最差的时代</title>
      <link>https://zllbird.github.io/2016/08/31/%E6%9C%80%E5%A5%BD%E7%9A%84%E6%97%B6%E4%BB%A3%E6%9C%80%E5%B7%AE%E7%9A%84%E6%97%B6%E4%BB%A3/</link>
      <pubDate>Wed, 31 Aug 2016 18:42:34 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/08/31/%E6%9C%80%E5%A5%BD%E7%9A%84%E6%97%B6%E4%BB%A3%E6%9C%80%E5%B7%AE%E7%9A%84%E6%97%B6%E4%BB%A3/</guid>
      <description>

&lt;h2 id=&#34;我们在最好的年代-也在最坏的年代:9e1b12d25534b6a61150ed3776c5ff4d&#34;&gt;我们在最好的年代，也在最坏的年代&lt;/h2&gt;

&lt;p&gt;两个对话，一是老友好久未见，坐一起喝酒。二十，下班回家路上地铁里和同事的闲聊。&lt;/p&gt;

&lt;p&gt;喝的是简单的哈啤，聊些乱七不糟的。哥们突然问：
“老诸，你说人为什么要奋斗呢？”
我沉默了好久，“为了活着”
“能不能不拽文&amp;hellip;说认真的”
“那难道等死啊”
“这和死有毛线关系，快点说认真的”
“那和咸鱼有什么区别？”
“说不过你，喝酒喝酒”&lt;/p&gt;

&lt;p&gt;晚上八点多，对于北京这个城市，大多人才刚刚下班。地铁擦着时间线，一站一站的开着。一个同事突然问：
“诶，你说，女人应不应该奋斗？”
我又是沉默了好久，“不应该”
“我有个朋友，她&amp;hellip;她就觉得，这样过挺好，不想折腾”
“&amp;hellip;我还是说，不应该”
“我觉得不行，我肯定受不了&amp;hellip;我一定要&amp;hellip;”
“&amp;hellip;”&lt;/p&gt;

&lt;h3 id=&#34;奋斗:9e1b12d25534b6a61150ed3776c5ff4d&#34;&gt;奋斗？&lt;/h3&gt;

&lt;p&gt;想来想去，大概就是这样吧。
如果有人问你，为什么要去奋斗。就告诉他，想那么多干嘛？不去拼，难道耗着等死啊。
但如果有人问你，应不应该。就告诉他，不应该，未来的任何一个时刻，你都会感觉付出是大于收获的。
&lt;strong&gt;是不是很不负责？&lt;/strong&gt;
唉，没办法，人终究还是要自己活不是吗？&lt;/p&gt;

&lt;p&gt;说点，反鸡汤的文字。
哥们问我，为什么很努力了，却只比那些懒蛋们好那么一点点？
我一下子没忍住，噗的，笑了粗来。
“我说，你比别人好那么一点点已经足够你乐呵了的，你还在这抱怨啥？”
哥们瞪着大眼，很不甘心。
“大多数人，就算很努力，仍然不会感觉比那些人好一点或者高一点的。你有这种感觉，已经说明你很优秀了，少年！”
听到表扬后，哥们总算有点脸，继续问，“那是不是还要再狠狠心，更努努力”
“绝大多数人，都是平凡的，不对，都是平庸的。平庸不仅仅是一个宽度的问题，可以这么说，你50分，平庸，60分，平庸，80分，还是平庸&amp;hellip;”
哥们忍不住插嘴打断了我，“***（骂人的话省略之），老子就弄到100分。”
我笑了笑，“100分，也是平庸，150分也是平庸，500分，也是平庸&amp;hellip;”
“我去，那多少才算不平庸啊！”
“10000左右吧，10000大概能算得上优秀，至于再往上的，那就很少了，我们很可能拼劲全力，也就500来分吧。”
哥们似乎又不甘心了，“那照你这么说，怎样才能到10000分，甚至更高？”
“靠运气咯”
“&amp;hellip;”
“靠家庭出身，靠背景，靠关系，靠不小心中了彩票，靠一不小心&amp;hellip;”
“停停停，你这太反鸡汤了，这说的，我还这么拼命干嘛？”
“哈哈，是呀，你很努力很努力，只会比别人过的好那么一点点，你一天天无所事事，也只会比别人过的差那么一点点，你何必这么努力呢？”
“&amp;hellip;额，你不往回拉啊，就这么应了啊，我囧，这对话还能继续吗？那你说，你为啥也这么努力？”
“我们在最好的年代，也在最坏的年代！”&lt;/p&gt;

&lt;h3 id=&#34;这是最好的时代-也是最坏的时代:9e1b12d25534b6a61150ed3776c5ff4d&#34;&gt;这是最好的时代，也是最坏的时代&lt;/h3&gt;

&lt;p&gt;“额&amp;hellip;又拽文了，啥意思啊？为啥要努力啊！”
“活着就是为了改变世界！”
“你够了&amp;hellip;你醒醒，你不是乔布斯。”
“努力这东西嘛，不要用来比，就算比，和自己比。往大的说，就是为了改变世界，哪怕只有那么一点点不起眼的改变，我也渴望去做啊，活着不仅仅有生活，还有梦想。”
“别扯那么远的，往小的说，别老往大的说”
“这是最好的时代！”
“&amp;hellip;你是不是不知道怎么回答，每次问你，都最好的时代。”
“被你看穿了&amp;hellip;”
哥们瞪着大眼看我，“&amp;hellip;”
“我没有为了一个确定的答案，只想努力的活，不一样的活，仅此而已”&lt;/p&gt;

&lt;p&gt;就算，只好那么一点点。我也已经满足了，不是吗？&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>旅程</title>
      <link>https://zllbird.github.io/2016/07/03/%E6%97%85%E7%A8%8B/</link>
      <pubDate>Sun, 03 Jul 2016 16:40:13 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/07/03/%E6%97%85%E7%A8%8B/</guid>
      <description>

&lt;h1 id=&#34;旅程:67f365767fb549aea5e954da885d342b&#34;&gt;旅程&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;你说人生就像那旅程，谁知道转弯后的风光。
雨后就有天晴，泪水后见阳光。No matter rain and tears&amp;hellip;
《旅程》羽泉&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;再遇见:67f365767fb549aea5e954da885d342b&#34;&gt;再遇见&lt;/h3&gt;

&lt;p&gt;上个月，路过济南。本着去一个城市坑一个老友的原则，到了之后，二话不说，进了宝林的店，坑吃坑喝。他从一个咖啡店的老板变成了一个掌大勺的厨子，虽然文艺气质并没有减少，但抡着大刀，霍霍哈嘿的文艺青年，毕竟还是少见。&lt;/p&gt;

&lt;p&gt;进了店，被忽如其来的花震惊了一下。似乎，每一次和他见面，就会有些不一样。但如果细细梳理，似乎又是这般。大概是又被生活晒黑了吧。哈哈！小小的吧台，比较窄也比较长，木头的，感觉比较亲切，大概我还是更喜欢木头比石头多一点吧。吧台后面是只有一层的木柜，琳琅满目的杯子和酒，对于一个爱小酌的人，看着真是一种享受&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;
“诸，老诸，你走神啦&amp;hellip;”
“看后面的柜子呢，你刚才说啥？”
“都到济南了，不去个景点转转”
“不去了，一会儿，出去在巷子里走走就行了。”
&amp;hellip;&lt;/p&gt;

&lt;p&gt;年轻的时候，我每走一个地方，风风火火的。恨不得，两三天，跑遍了所有的景观，大山大江，楼阁宫殿，大都显得过于匆匆。现在懒了，去一个地方，大都是因为要见几个好友，聊几句人生或者牢骚几句生活。然后，假装成本地人，去不知名的公园遛弯，去路边吃说不上正宗不正宗的特色。再然后，在另一张床上醒来，拉开窗帘，看一眼和北京不一样的早晨。或许，现在的自己不像是旅行，只是为了一段故事罢了。&lt;/p&gt;

&lt;p&gt;厨子爱上了做酒，五月的时候做了一个叫五月的酒，六月再做一个叫六月的，大概厨子只是喜欢做酒，不喜欢取名，所以取名显得很随意。然后，宝林（就是那个厨子）还说，&lt;strong&gt;六月要做一个叫六月的酒，还要做一款叫夏至的茶。&lt;/strong&gt;然后，猛地被这名字套住了，酒名六月，是说炽烈，茶名夏至，道的是那抹清凉，我没有尝到夏至，猜想或许里面有柠檬。大概文艺就是这样吧，太过于诗情画意反而有点浮夸，没有那么多内涵，反倒是经得起来回品味。&lt;/p&gt;

&lt;p&gt;女朋友絮叨说：你想多了，只是任性的取个名字罢了。我笑了笑，是呀，太任性了。厨子也想多挣钱，哈哈，大概没有人会不想多挣钱。但厨子更想，开开心心的挣钱，挣自己喜欢的事情的钱，挣自己看的上的人的钱&amp;hellip;这个厨子真的是太过于任性了！我转过头，对女友说，这样的厨子，估计是挣不出好几个亿了。女友笑了一下，然后问我，重要吗？&lt;/p&gt;

&lt;p&gt;我见过很多活的很开心的人，也见过很多活的很任性的人。但这个厨子，大概是我见过的任性的那些人中，最开心的吧。想了想，这个厨子，大概不是在做生意。而是在做一个故事。&lt;/p&gt;

&lt;p&gt;再见，再遇见。&lt;/p&gt;

&lt;h3 id=&#34;安静如海:67f365767fb549aea5e954da885d342b&#34;&gt;安静如海&lt;/h3&gt;

&lt;p&gt;离开济南后，便回了威海。一个好小好小的城市，但这么小的城市，却厚着脸皮，三面临海。文艺的说法就是，一不小心，便走到了大陆尽头，而眼前是，无尽的大海。&lt;/p&gt;

&lt;p&gt;下了高铁之后，还未出站，我便对女友说。接我们的人是狐狸和他媳妇，很好找，最瘦的男人。女朋友笑着说，比你以前还瘦？我却一本正经的对比了一下，说：不分上下。&lt;/p&gt;

&lt;p&gt;回威海后，这些伙计们。这么文明的形容他们，自己都觉得有点怪怪的，还是说这群牲口们，我完全可以写一个系列来慢慢讲他们，当然，正在写，系列名字可以透露一下，叫饲养记——论牲口是如何成长的。（我估计，这个题目放出去，我已经被打死好几次了）&lt;/p&gt;

&lt;p&gt;旅程中，最享受的事情，大概就是，在另一张床上醒来，然后，没有压力，没有任务，什么都没有，享受。但最最享受的，大概还是醒来后，就能看到一片海。单车或者徒步，在太阳没醒之前出门，漫步海边，听那亘古不变的鼻息，那片蔚蓝浮浮沉沉，日出&amp;hellip;&lt;/p&gt;

&lt;p&gt;大海是治愈的，所以，心情不好的时候，来来海边。我一直认为大海之所以能治愈，是因为它总能使人安静。虽然我很努力的去写，但似乎总是很难写出站在海边的那种感觉。只能说，那种感觉太简单，太安静，没有什么起伏，反倒是很难用文字描绘了。&lt;/p&gt;

&lt;p&gt;在一对新婚夫妇的新房里，吃了顿海鲜大宴。然后，六个人围着打打扑克，唠唠嗑。时间在茶几上慢慢流走，当然，饮料加水果，茶兑时光。&lt;/p&gt;

&lt;p&gt;旅行。走很多很多路，去见不一样的风景。
旅程。走很多很多路，但不在乎风景，更在乎人。或者，我们只是换了一个地方，吃饭，打牌，喝茶~&lt;/p&gt;

&lt;h3 id=&#34;末了:67f365767fb549aea5e954da885d342b&#34;&gt;末了&lt;/h3&gt;

&lt;p&gt;末了，想起两句。忘了哪里看到的，也算是鸡汤吧。偷个懒，直接拿鸡汤结尾。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;最终我们还是应该，“读万卷书，行万里路”。
如果只读书，不走走，最终不过是个书匠。
如果不读书，行万里路也不过是个邮差。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>VPN</title>
      <link>https://zllbird.github.io/2016/06/22/vpn/</link>
      <pubDate>Wed, 22 Jun 2016 01:46:13 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/06/22/vpn/</guid>
      <description>

&lt;h2 id=&#34;vpn-vps:8b802a07289a50a309ec4f2889b43c33&#34;&gt;VPN，VPS&lt;/h2&gt;

&lt;h3 id=&#34;需自己安装配置客户端:8b802a07289a50a309ec4f2889b43c33&#34;&gt;需自己安装配置客户端&lt;/h3&gt;

&lt;p&gt;引子：我（诸隆隆），总被朋友要求推荐VPN，所以自己搭建了一个VPS(你可以理解为一个VPN服务)，方便我的朋友翻墙使用google和facebook之类的软件。使用的*引擎*是clowwindy大神的shadowsocks，（clowwindy大神被ZF请去喝茶后，shadowsocks再也没有更新过&amp;hellip;好可惜）。&lt;/p&gt;

&lt;p&gt;这是我自己搭建的vps，提供给我的朋友使用，请勿转给其他人使用，每月的流量共计有10G，过后非常昂贵，如果流量预警，我会关闭服务器，所以请节约使用!&lt;/p&gt;

&lt;p&gt;节点是&lt;strong&gt;东京&lt;/strong&gt;的VPS，网速经过测试一般在200~300ms延迟。可以理解为网页浏览不会有问题，玩游戏和看视频会有卡顿，高清视频必定卡，（请不要看高清视频，会死人的）。&lt;/p&gt;

&lt;p&gt;我搭建的 VPN 系统不同于常见的 PPTP L2TP 等隧道技术, 而是使用加密的 Socket 通信, 不容易被墙, 但是需要自己安装客户端使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;我的 Shadowsocks 帐号:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;服务器 IP : 54.199.227.151&lt;/p&gt;

&lt;p&gt;端口号 : 8333&lt;/p&gt;

&lt;p&gt;加密方式 : aes-256-cfb&lt;/p&gt;

&lt;p&gt;密码 : （下面的是密码，注意前后端没有空格）&lt;/p&gt;

&lt;p&gt;zll!@#vps$%^mm&amp;amp;*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;如果服务器都不能正常使用，可能被防火墙封住等原因。可以直接联系我(诸隆隆，qq:784537229)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mac-下的配置方式:8b802a07289a50a309ec4f2889b43c33&#34;&gt;&lt;strong&gt;Mac 下的配置方式&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;下载并安装 ShadowsocksX, 在 QQ 群共享文件中, 文件名为 ShadowsocksX-2.6.3.dmg&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装后运行, 在弹出窗口，点击&lt;code&gt;+&lt;/code&gt;新增服务器配置, 按照上面提供的信息完成配置并保存&lt;/li&gt;
&lt;li&gt;系统右上角会出现一个飞机图标, 点击该图标, 确保服务器选中刚才配置好的(前面打对勾), 代理策略选择自动代理(前面打对勾). 这样即完成 vpn 的配置.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;该工具的自动代理使用了 gfwlist, 可以自动判断访问的地址是否需要翻墙. 配置完成后可以尝试打开 &lt;a href=&#34;https://www.facebook.com/&#34;&gt;facebook&lt;/a&gt; 和 &lt;a href=&#34;http://www.xiami.com/&#34;&gt;虾米音乐&lt;/a&gt;, 如果二者都能正常打开, 说明可以成功翻墙.&lt;/p&gt;

&lt;h3 id=&#34;windows-下的配置方式:8b802a07289a50a309ec4f2889b43c33&#34;&gt;&lt;strong&gt;Windows 下的配置方式&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;下载并安装 shadowsocks-win, 在 QQ 群共享文件中.&lt;/p&gt;

&lt;p&gt;Win 7 及以下 下载  Shadowsocks-win-2.4.zip&lt;/p&gt;

&lt;p&gt;Win 8 / 10及以上 下载  Shadowsocks-win-dotnet4.0-2.5.2.zip&lt;/p&gt;

&lt;p&gt;下载解压后可直接运行. 配置大致流程参考上一节中 Mac 下的配置方式. 如果有问题可以联系我&lt;/p&gt;

&lt;h3 id=&#34;iphone-下的配置-已失效-iphone用户我正在想办法:8b802a07289a50a309ec4f2889b43c33&#34;&gt;&lt;strong&gt;iPhone 下的配置 （已失效，iPhone用户我正在想办法）&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;在苹果商店下载 Shadowsocks.&lt;/p&gt;

&lt;p&gt;安装后的配置参考&lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-iOS&#34;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意在 iPhone 下, 配置全局翻墙并将 shadowsocks 切到后台后, 只能保持链接十分钟左右, 之后需要重新切到 shadowsocks 将其唤醒, 就能自动链接上了. 这是 &lt;strong&gt;iOS系统&lt;/strong&gt; 的限制.&lt;/p&gt;

&lt;p&gt;如果是使用 Shadowsocks 工具中自带的浏览器翻墙浏览网页, 则不会有这个问题.&lt;/p&gt;

&lt;h3 id=&#34;android-下的配置:8b802a07289a50a309ec4f2889b43c33&#34;&gt;&lt;strong&gt;Android 下的配置&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;下载并安装 Shadowsocks-android.（用googleplay可以直接下，我正在做安装包，预计下个周能和大家见面）&lt;/p&gt;

&lt;p&gt;安装后填写服务器配置, 路由设置为 全局,  打开服务即可使用了.&lt;/p&gt;

&lt;p&gt;安卓不会存在 IOS 那样的链接时间限制.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>夏至</title>
      <link>https://zllbird.github.io/2016/06/22/%E5%A4%8F%E8%87%B3/</link>
      <pubDate>Wed, 22 Jun 2016 01:46:13 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/06/22/%E5%A4%8F%E8%87%B3/</guid>
      <description>

&lt;h1 id=&#34;夏至:a5ba64e5f442b6963adba49224fa6530&#34;&gt;夏至&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;回到家
 把自己卸下
 放进冰箱&lt;/p&gt;

&lt;p&gt;疲倦和惆怅
 威士忌和时光
 ——飞鸟&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​   拿着勺子从冰箱里抱出半个西瓜，然后在阳台上，随便踢了一个垫子，盘着腿好不容易的坐了下去。一下子，绷着很久的神经也放松了下去。&lt;/p&gt;

&lt;p&gt;​   已经接近凌晨一点，外面的灯光恍恍惚惚的，很多，但却都显得很昏黄，那种很沉的颜色，像是被黑夜吃着，挣扎着。&lt;/p&gt;

&lt;p&gt;​   放一首李荣浩的老街，声音调的很大，却不知道为什么，仍然是感觉很静。错了错了，重说重说：大半夜的，本来就有一种让人很不舒服的静，本想着放放歌，会好那么一点点，但似乎恰恰相反，歌没有打破夜的这份静，反倒是让夜显得更加深邃。一眼望去，不知尽头，不知方向。&lt;/p&gt;

&lt;p&gt;​   &lt;strong&gt;我似乎又多添了一分恐惧和不安。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​   摇摇头，不去想，不去想。&lt;/p&gt;

&lt;p&gt;​   狠狠的挖一口西瓜，张着大口，狠狠狠狠的咬上一口。结果下个瞬间，又只能全部吐到垃圾桶里——馊了。我举着西瓜，坐在垃圾桶边上。不甘心也没有办法，手一松，西瓜咚咚的掉进了垃圾桶里。我抿抿嘴，仍然是没控制的叹了一口气。&lt;/p&gt;

&lt;p&gt;​   胳膊压着盘着的大腿上，手托着腮帮贴在玻璃上，我凝望着黑夜与灯光，什么都不去想，什么也不愿去想。总是想太多事情，让人好累，总是不自觉的想太多事情，让人有种无可奈何的惆怅。脸贴着玻璃，有点凉，眼睛看着深夜，有点慌张。&lt;/p&gt;

&lt;p&gt;​   &lt;strong&gt;我似乎又多添了一分迷茫和惆怅。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;​   坐了一会儿，还是忍不住。拿出了威士忌，浅浅的倒上了一杯，学做李白。夏至，白天最长，黑夜最短。或许，这杯还未饮尽，天就亮了。我又要背上行囊，奔波于那有点太远的梦想。只是努力这东西&amp;hellip;&lt;/p&gt;

&lt;p&gt;​   再然后，酒还未酣，肚子却先不争气。咕噜咕噜的叫着，饿了。拖着身子，又翻一遍冰箱。后悔自己没有备上几包泡面，或几根火腿。幸运的是，还找到几包饼干，不幸的是，似乎只剩下了几包饼干。&lt;/p&gt;

&lt;p&gt;​   &lt;strong&gt;我似乎又多添了一分道不明的悲伤。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;​   再再然后，我干脆躺在地板上，斜着头，望着天。很深很深的黑，没有月光，也没有星光。我试图找寻，努力的找寻，可笑的是因为念起一首歌，夜空中最亮的星——“每当我找不到存在的意义，每当我迷失在黑夜里。”然后，我发觉，不仅童话里是骗人的，歌曲里也是。&lt;/p&gt;

&lt;p&gt;​   第二次，我没忍住，又叹了一口气。地板好硬。疲倦开始蔓延，却忘了带着困意，眼睛望着天，心里念着却是时光。&lt;/p&gt;

&lt;p&gt;​   唉&amp;hellip;&lt;/p&gt;

&lt;p&gt;​   &lt;strong&gt;酒已尽，人未眠，夜已央。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​&lt;br /&gt;
​&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>为什么我们总是没有时间</title>
      <link>https://zllbird.github.io/2016/06/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E6%80%BB%E6%98%AF%E6%B2%A1%E6%9C%89%E6%97%B6%E9%97%B4/</link>
      <pubDate>Sat, 04 Jun 2016 17:03:59 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/06/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E6%80%BB%E6%98%AF%E6%B2%A1%E6%9C%89%E6%97%B6%E9%97%B4/</guid>
      <description>

&lt;h1 id=&#34;为什么我们总是没有时间:b1ba9578e7469d8a9031b8904cebc257&#34;&gt;为什么我们总是没有时间&lt;/h1&gt;

&lt;p&gt;记一次座谈。
时间是什么？当然，这不是物理文章，所以不用时间简史去解释，我们都知道时间是什么，时间是怎么回事儿，也总说时间不可逆，但还是有一些关于时间的东西，我们忽视了&amp;hellip;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;时间是最大最不可能回退的成本，也是最廉价的成本。因为它不可保存，只能使用掉或者浪费掉。一天有24小时，不可能多，也不能少，因为不能存储，所以，你再怎么努力，也只能用24个小时，但你无所事事，也有24个小时去浪费，这就是时间，廉价却不可回退。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;吹嘘完时间，聊点正事儿。为什么总是没有足够的时间完成计划？为什么我们明明没有偷懒，明明很辛苦，却仍旧不能完成计划？如果你也被这两个问题苦恼，不妨坐下来，喝杯茶，聊两句。&lt;/p&gt;

&lt;h3 id=&#34;请先-自私:b1ba9578e7469d8a9031b8904cebc257&#34;&gt;请先‘自私’&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;自己的事情应该永远放在第一位，不关心自己的事情，总做着别人的事情，那么天天喊忙，就是活该！&lt;/strong&gt;
从我看来，任务分两种。一种是创造性的，另外一种是非创造性的。创造性对我来说，就是编程和写作。非创造性的，就是开会，调bug，商量今晚吃什么&amp;hellip;&lt;/p&gt;

&lt;p&gt;简单分开之后，先聊一下创造性的工作。拿编程来讲，我肯定是需要一个完整的，不被打扰，不被切割的时间。（别和我提什么番茄工作法，写程序来了感觉，突然被番茄打扰真的很闹心！）思考是人类非常耗能的工作，而且它不像跑步游泳，那么直观的看到并且反映到身体上。所以，对于思考引发的身体损耗和成本都显得那么隐晦，不容易被发现。举个例子，设想一下，快跑的时候，突然有人把你拦下，然后让你换个姿势继续跑，你会不会当场骂人呢？我估计我会。但你正沉浸在我的思考时，突然被人拦下，然后让你想另一个事情，你会不会当场骂人呢？我估计你不会，但我会。&lt;/p&gt;

&lt;p&gt;当一个人在做创造性工作的时候，往往大脑在高速运转耗能思考。真正沉浸其中的感觉非常好，甚至可以说是可遇而不可求的，即便没有完全沉浸其中，也会将几乎所有的注意力都放在工作上。这个时候被打断，是很可怕的一件事儿，很可能破坏了下一个“iPhone”的诞生！多说一嘴，想起以前的一个同事，很有才，很能干，但却离职了，彼此其实都很可惜，原因大概是因为他始终不懂拒绝，所以总是把自己弄得很累，却也收获不大。他崇尚极客精神，却始终被凡事所累。&lt;/p&gt;

&lt;p&gt;我曾对他说过，拒绝其实是让双方受益的事情。&lt;/p&gt;

&lt;h3 id=&#34;用碎时间处理碎任务:b1ba9578e7469d8a9031b8904cebc257&#34;&gt;用碎时间处理碎任务&lt;/h3&gt;

&lt;p&gt;说完创造性的事情，说说非创造的事情。非创造的事情，让它尽情来。短时间的思考与碰撞往往能迸发更多的创意。但不能从一个角度，永远有着对立的角度。只有对立了，才能怀疑。怀疑是思考的前提，不去辩，哪来的是非对错。&lt;/p&gt;

&lt;p&gt;注意力是有限的，时间是个伪命题。所以，总是可以大事化小，拆分是门艺术。连贯是思考杀手，长时间被打断很可怕。让需要连贯思考的成本降低，让时间变短。先主逻辑，然后小实现。无论啥，总是可以被被拆分的，如果不可以，大多数情况是逻辑并不清晰。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>必然，重混和互动</title>
      <link>https://zllbird.github.io/2016/05/30/%E5%BF%85%E7%84%B6%E9%87%8D%E6%B7%B7%E5%92%8C%E4%BA%92%E5%8A%A8/</link>
      <pubDate>Mon, 30 May 2016 19:50:43 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/05/30/%E5%BF%85%E7%84%B6%E9%87%8D%E6%B7%B7%E5%92%8C%E4%BA%92%E5%8A%A8/</guid>
      <description>

&lt;h2 id=&#34;必然-重混和互动:c88345bce496b846535b1a0b38761f7d&#34;&gt;必然,重混和互动&lt;/h2&gt;

&lt;h3 id=&#34;创新不一定是创造:c88345bce496b846535b1a0b38761f7d&#34;&gt;创新不一定是创造&lt;/h3&gt;

&lt;p&gt;一直有个误区，以为创新就是从无到有。必然这章，让我重新定义创新的意思，为了区别我原来对于创新这个词的理解。就先把从无到有的这个过程叫做创造吧。
难道创新不是从无到有吗？不全是，是一部分，准确的讲，应该是一小部分。从无到有是一件很不容易的事情，依我看来，非大能力者和大毅力者不能为之。但创新不仅仅是这部分难的，也有一部分简单的，将已经有的东西，拆分打乱，然后重新组合，重混成一个崭新的事物。不是从无到有，但一样满满的全是新的，这不就是一种创新。
那么，道理谁都会讲，问题是，该怎么做？&lt;/p&gt;

&lt;h3 id=&#34;从目录说起:c88345bce496b846535b1a0b38761f7d&#34;&gt;从目录说起&lt;/h3&gt;

&lt;p&gt;必然书中，给了一个强力的例子，当我读到这的时候，莫得有一种心有戚戚的感觉。目录对于书来首，绝对是伟大的创造。让亿万书目从此有了检索。当然，对于此完全可以写一篇文章专门来歌颂，但今天不是来夸它的。&lt;/p&gt;

&lt;p&gt;如今的网络时代，文字这个载体依然在这个平台上呼啸嘚瑟，但较比千年，它已经出现了形形色色的对手。图片，声音，视频正不断的扩大着，毕竟数字时代，很多以前只能靠文字和书来承接的，现在都可以通过多媒体来，而且更加可观，更加优秀。但即便如此，仍有些东西还未完善，比如目录。&lt;/p&gt;

&lt;p&gt;如果把书对比与电影。那么，目录对于书，什么对于电影呢？关键位置的截图吗？还是预告片？我们读一本书的目录能了解到这本书整体的结构，而电影呢？只看预告片足够吗？或者看关键位置的截图（相信经常看日本爱情动作片的孩子，应该能明白我想说的是什么）？其实不足够，技术还需要发展，文字已经发展到可以通过搜索引擎来检阅目录和关键字来定位到书中的具体位置，可搜索对于图片和视频仍然是进行困难。&lt;/p&gt;

&lt;p&gt;先把困难放在一边。如果google能搜索音乐和电影里的具体内容，我们是否可以想象，当我们需要一个场景的时候，我们告诉google我们想要一个什么场景的片段，然后所有相近和相似的片段都会出现供我选择。想一下还挺兴奋的。&lt;/p&gt;

&lt;h3 id=&#34;时间不可逆吗:c88345bce496b846535b1a0b38761f7d&#34;&gt;时间不可逆吗？&lt;/h3&gt;

&lt;p&gt;时间是最大最不可能回退的成本，也是最廉价的成本。因为它不可保存，只能使用掉或者浪费掉。但反过来想，真的如此吗？数字技术，已经很大程度，或者说，另类的实现了这种替代。编辑文本时时时撤销，从任何一个保存的节点再重新开始写。视频和图片软件同样，游戏软件更加是如此。仍记得，当初玩《仙剑奇侠传》时，挂掉之后就会出现一排字：胜败乃兵家常事，大侠请重新来过吧。时间不可逆，但我们却可以重新来过，我们再改变时间吗？&lt;/p&gt;

&lt;p&gt;时间悖论很多，也太过于光怪陆离，但无论哪个版本，能回看自己的历经，那将是一种什么状体？读书读到这里的时候，我猛地想起来一部英剧——黑镜。&lt;/p&gt;

&lt;h3 id=&#34;vr-虚拟现实-还是从智能说起吧:c88345bce496b846535b1a0b38761f7d&#34;&gt;VR?虚拟现实？还是从智能说起吧&lt;/h3&gt;

&lt;p&gt;这两年VR被炒得太热了，我读到这的时候，没多大热情和兴趣。只有一个小小的猜测，虚拟现实技术，我预想真正带动它发展的，应该是网络色情服务。它是最能带来互动，但却不需要很多智能的互动的行业，我们拭目以待吧。&lt;/p&gt;

&lt;p&gt;互动这章也很有意思，一直在努力提供一种思路。我们使用各种电子设备，达到一种感受。但使用本身是相互的，越进步，就越相互，是一种相互满足的状态。或许，我们一直追求的智能，本来就应该是一种互动的概念，我读一本书时，我遇到一个不懂得词语时，不应该需要我去查询，甚至不需要我用手点一下屏幕，书和屏幕就自动显示这个词语的意思以及维基上的解释。（这并不困难，只要让屏幕读懂我们皱眉，我们抿嘴，我们&amp;hellip;总之，我们总会出现什么被捕捉到）这才是互动，或者，这才配得上智能二字。&lt;/p&gt;

&lt;p&gt;突然间脑洞一点点，人们总是歌舞，歌舞，但总是先有歌，然后编排舞步，有没有一种方式，让我在房间里自由自在的舞动，房间里的设备捕捉到我舞动的感觉，然后出来一首动听配合舞蹈的歌曲呢？&lt;/p&gt;

&lt;p&gt;互动代表它有一种智慧在里面，即便是略显机械的智慧，仍让我们觉得它是活的那种感觉，而这种感觉恰恰就是人们离不开的东西。&lt;/p&gt;

&lt;p&gt;我们头戴着头盔，单靠意识去让我们的机械手臂拿起东西来，更高级的，让我们能隔空取物&amp;hellip;然后，我又在想，如果这样，那么头戴着头盔，让我们能用意识控制电脑，打开文件，移动鼠标，打字&amp;hellip;这两种，切不论哪个更难实现，反过来想问问自己，哪个以后更为常见呢？又是那个问题，我们到时候是更多在乎所谓的现实世界，还是更多在乎所谓的数字世界呢？我觉得，很可能更在乎的是数字世界，就我而言，更在乎用意识控制电脑打字出来，想想就激动的忍不住颤抖。&lt;/p&gt;

&lt;p&gt;还有一点。互动的成本，或者说，任何技术带来的学习成本。学习是有成本的，这个成本还不是定额的，就现在而言，我所知道的，年龄和阅历会让这个成本变得无法估计。所以，实现技术是一件事儿，普及还是一件。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>必然，我们在选择，也在被选择</title>
      <link>https://zllbird.github.io/2016/05/29/%E5%BF%85%E7%84%B6%E6%88%91%E4%BB%AC%E5%9C%A8%E9%80%89%E6%8B%A9%E4%B9%9F%E5%9C%A8%E8%A2%AB%E9%80%89%E6%8B%A9/</link>
      <pubDate>Sun, 29 May 2016 15:11:30 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/05/29/%E5%BF%85%E7%84%B6%E6%88%91%E4%BB%AC%E5%9C%A8%E9%80%89%E6%8B%A9%E4%B9%9F%E5%9C%A8%E8%A2%AB%E9%80%89%E6%8B%A9/</guid>
      <description>

&lt;h1 id=&#34;必然-我们在选择-也在被选择:1c3125473ed37800649884e0f74ea659&#34;&gt;必然，我们在选择，也在被选择。&lt;/h1&gt;

&lt;h3 id=&#34;摘要:1c3125473ed37800649884e0f74ea659&#34;&gt;摘要&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;相见恨晚&lt;/li&gt;
&lt;li&gt;我就是我，是颜色不一样的烟火&lt;/li&gt;
&lt;li&gt;时间是个伪命题，但注意力是真命题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;必然之必然，KK的这本书的确有很多角度让我折服。离开固有的想法不易，但重新解读固有的想法似乎更难。&lt;/p&gt;

&lt;h3 id=&#34;相见恨晚:1c3125473ed37800649884e0f74ea659&#34;&gt;相见恨晚&lt;/h3&gt;

&lt;p&gt;必然中专门讲了亚马逊的推荐，读书或者书目推荐，既然是读书。
那从读书讲起。
经常读书，最开心的莫过于读到一本好书，同理，不开心的也是读了半天才发觉是一本烂书。自然，选书一直是我的难题，而且越来越难，因为时间越来越少。每每读到一本好书的时候，总有那么一种&lt;strong&gt;相见恨晚&lt;/strong&gt;的感觉。自然，找到一本好书不易，找到一本一见如故，很对自己口味的好书更是难上加难，选书真的是一件很技术的活，&lt;strong&gt;直到&lt;/strong&gt;亚马逊的出现。&lt;/p&gt;

&lt;p&gt;*亚马逊的那个功能————购买这本书的用户，同时还购买了这几本书。*亚马逊的推荐真的是拯救了我，刚开始的时候我只是尝试的买了几本系统推荐给我的书，但随后便一发不可收拾，那种&lt;strong&gt;相见恨晚&lt;/strong&gt;的感觉一次接一次的，书荒已成历史。（此处让我先美一会儿）&lt;/p&gt;

&lt;p&gt;这个世界上，总有一些人和我喜欢一样的书，有着相似的历经，自然也会有着相似的书目，如果我们能相聚在一起，开个读书分享会，交换有无，将彼此读过的书分享出来，每次读书会结束，我都能收获一些新的书目，享受一段新的读书时光。以前，这是一个奢望，毕竟找到志同道合的人，然后相聚是一件多么需要巧合的事情，但在现在，它已经不需要了，数据洪流中，我们已经公开了分享了自己的书目，甚至分享了自己的品味和思考（只是我们并不自知），亚马逊将这些计算完，汇成一个标签，然后找到相同标签的人，将这些书目放到我们面前。&lt;strong&gt;至此，我跨过了我的奢望。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;替亚马逊做完广告。当我读必然读完这段的时候，我脑子里一直有这么一个想法。既然，志同道合能让数据推荐给我好书，那同仇敌忾是否也一样可以呢？比如，亚马逊的书下面有那么一个选项，喜欢/讨厌，供我选择。然后，在下次登录时，讨厌这本书的用户，都比较喜欢这几本书或者讨厌这本书的用户同时也讨厌这几本书。如此一来，岂不更有意思。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;志同道合是理由，那同仇敌忾也是。&lt;/strong&gt;其实对于我来说，不喜欢反而更能准确。和打仗一样，有时候不一定是有共同的目标而携手作战，而是因为有着共同的敌人。&lt;/p&gt;

&lt;h3 id=&#34;我就是我-是颜色不一样的烟火:1c3125473ed37800649884e0f74ea659&#34;&gt;我就是我，是颜色不一样的烟火&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;谷歌已经实现了，在大规模定制。我们很多创业，包括我正在工作的内容一样，也是在数字领域内，为用户做着个性化定制。在数字领域里，它变得没有那么困难和遥远，但在现实生活里，个性化定制仍然是奢侈品，仍然难以普通化。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;网络时代，尤其是我这种职业就是码农的人来说。所谓的个性化，已经不仅仅是趋势，真的就是这本书的题目那样，个性化是一种必然，这种必然在网络上，在数字上，正在发生。但现实生活里，工业化仍是这个社会的主题，个性与定制对于每个人来说的确很遥远。&lt;/p&gt;

&lt;p&gt;我喜欢张国荣的那首《我》，尤其是这句歌词——&lt;strong&gt;我就是我，是颜色不一样的烟火&lt;/strong&gt;。寥寥几字，却让我深深的着迷其中。我们人，为了生存而群居变得一样，但却又一直挣扎着，想变得不一样，真是奇怪。网络开启了这个门，越来越多的公司和企业在网络上为他们的用户提供各种各样的个性化定制，就像在亚马逊，我们每个人看到的首页的内容都是不一样的。但越是如此，在现实生活里，我们就不得不面对，普通化和工业化。个性似乎只能存在数字世界里&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;但是！但是！但是！我们真的需要吗？需要在现实里同样那么个性化吗？数字领域里的个性化真的不足够满足我们的个性化吗？&lt;/strong&gt;
我似乎从来不用虚拟世界这个词，大多数文字里我都用的，数字领域，数字世界，网络世界这样的词汇。大概本身是因为从事互联网开发，所以世界观来说，这个世界并不虚拟，反而真实的可怕。更何况，我感觉网络对我的改变更加的快速和迅猛，越发离不开手机和网络。我深深的感到，在数字里的时间超过我再现实生活里的时间，既然如此，数字和现实，哪个算真哪个又叫虚拟呢？&lt;/p&gt;

&lt;p&gt;也是如此，现实生活里的个性化虽然仍遥不可及，但在数字世界里的时间越长，反倒觉得现实里的那个性化不重要了。我似乎真的不太需要定制的拖鞋，定制的沙发，定制的台灯，因为我更需要定制的界面，定制的交互，与定制的功能。&lt;/p&gt;

&lt;p&gt;我们总在努力如何将现实中的东西复制到网络世界里，却忘了，在网络世界，我们需要吗？&lt;/p&gt;

&lt;h3 id=&#34;时间是个伪命题-但注意力是真命题:1c3125473ed37800649884e0f74ea659&#34;&gt;时间是个伪命题，但注意力是真命题&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;这就是后稀缺。我们只能与宏达世界的一小部分建立链接。所以，反过来，从宏达世界的方向来看，唯一稀缺的就是人类的注意力。
所以注意力留在哪里，金钱就就在那里。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;同样，当我看到必然中举了这么一个例子，当我们因为投放简历或者投放广告等向对方发送邮件，那么收件人可以向发件人征收打开费用！邮件被打开阅读，费用就会被扣除。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这个逻辑非常的棒。向他人注意力支付报酬原则。&lt;/strong&gt;
时间是个伪命题，它的确稀有，甚至比金钱稀有，世界上有很多东西难以复制，但想破脑袋也总有那么一点点复制的可能，唯独时间没有。绝对的不可复制，让时间成了珍品，也是我们经常说的那样，一寸光阴一寸金，寸金难买寸光阴。但可怜的是时间不仅仅只是不可复制，还不可存储。一天只有24小时，不会多出一秒，却也不会少一秒。无论你有多少事情要做，只有24小时，但巧的是你什么事情都不去做，也有24小时。不可复制，也不可存储。你如果不用掉这个时间，那么不好意思，你只能浪费掉这个时间。所以时间是个伪命题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;但注意力不是！&lt;/strong&gt;时间是亘古的，就在那里。注意力不是，注意力停在哪里，哪里就是工作，哪里就是生活。
网络给了我们一个大大的空间，让我们与这个世界的链接变得不那么困难，不在那么遥不可及。我们不用跑到亚历山大图书馆去找珍贵的单本，也不用跑到耶鲁大学去听公开课，这些你都可以通过google得到。发现了吗？在我们这个时空的世界里，空间被‘压缩’了，那些本来在空间上占据‘稀有’这个标签的东西，渐渐变得普通甚至廉价。同样，空间上的链接变得越来越容易，信息也同样变得越来越容易，容易的东西就会泛滥，这个时候，无法被网络复制的东西便会珍惜起来。注意力，基于时间成本上的这个东西，慢慢的变得稀有。因此，网络时代，注意力成了资源，成了‘货币’。
&lt;strong&gt;注意力留在哪里，金钱就在那里。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;什么是选择:1c3125473ed37800649884e0f74ea659&#34;&gt;什么是选择？&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;我们现在的选择权是越来越大。网购扩大的不仅仅是商圈，更是无限扩大了我们的选择权，那么，我们会选什么？那么，我们会怎么选？那些数据洪流，和我们生存或者说监视了我们好几年的数据，在帮我们选，事实上应该说，它们能预期到我们将会问什么。&lt;/p&gt;

&lt;p&gt;然而，我们并不知道自己想要什么。人就是这么奇怪，这么贱。相反，数据会告诉我们，我们想要什么，它是由我们自身行为所产生的建议和推荐。就像一面镜子。让我们看到自己想要什么的镜子。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;那么-什么是选择:1c3125473ed37800649884e0f74ea659&#34;&gt;那么，什么是选择？&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>幸福，兄弟</title>
      <link>https://zllbird.github.io/2016/05/28/%E5%B9%B8%E7%A6%8F%E5%85%84%E5%BC%9F/</link>
      <pubDate>Sat, 28 May 2016 16:24:26 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/05/28/%E5%B9%B8%E7%A6%8F%E5%85%84%E5%BC%9F/</guid>
      <description>

&lt;h2 id=&#34;幸福-兄弟:99c5c5d3b863827ac589b345707f26ee&#34;&gt;幸福，兄弟&lt;/h2&gt;

&lt;p&gt;感冒似乎又加重了，本来计划写的文字又拖了。算了，还是忍不住爬起来，开始写这篇文字。&lt;/p&gt;

&lt;p&gt;我有一个兄弟，代号狐狸，前天结婚了。
新婚快乐，狐狸，非常的遗憾，我没能到现场，真的非常遗憾，我好渴望去现场看看，那应该是一个句号，很完美的那种，代表一个故事的结束和另一个故事的开始。&lt;/p&gt;

&lt;p&gt;我的文字里总是会出现狐狸（真的有这么一只狐狸），他也算是个名言大师，总会在不经意之间，吐出象牙，对于一只狐狸来说，嘴里能吐出象牙已经是很难得事情了。我和他开玩笑说，以后你说的多了，可以出本书，书名我都给你想好了，人家白岩松出本书叫白说，你也一样，出本书叫胡说（狐说），胡说八道的那个胡说。然后，他就会赶紧接上说，好呀好呀。&lt;/p&gt;

&lt;p&gt;在我这一群‘狐朋狗友’中，狐狸是&lt;strong&gt;第一个&lt;/strong&gt;结婚的，先驱总是会比剩下的人更面对更多困难，但也总比剩下的人收获更多。我们都问，狐狸，结婚到底是什么感觉？狐狸想了想说，累，很累&amp;hellip;妈的，累死老夫了。所以，我们都知道了，结婚真的很累人。但狐狸说这话的时候，一直掩盖不住笑意。所以，我们不知道，结婚到底有多满足自豪。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;又一次，感到无比的遗憾，未能去你的婚礼，未能亲眼看到你们走过红毯，未能亲口跟你说上那句新婚快乐，未能&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这似乎是一个节点。从狐狸开始，终于也轮到我们这群人，慢慢走入婚姻，慢慢组建家庭，慢慢的开始柴米油盐，从那个小小的我变成那个大大的我。我们一直承载着父母的关怀，终于，要和另一个人一起，组建一个新的家。生活似乎变得不太一样，一下子要去想很多东西，一下子又要规划很多东西。&lt;/p&gt;

&lt;p&gt;狐狸说过，这群牲口们似乎都说过，喜欢过得过且过的生活，喜欢无拘无束的日子，不要去规划，也不愿去规划。但现在，只能自己打自己的脸了。因为生活不再是一个人的事儿了，是两个人，以后可能还会是三个人或四个人的事儿。我们不在无所畏惧，因为我们不在孤军奋战，人有了牵挂，就会变得不一样。
写着写着，就莫名的羡慕了。&lt;/p&gt;

&lt;p&gt;狐狸的故事，我看着看着，看了快十年，结果就这么错过了大结局。狐狸的爱情已经跑了十年，浪漫吗？当然浪漫，问人生能有几个十年，三十岁之前你能有几个十年？而且，最终走过红毯，许下今生的诺言，从此海枯石烂，粗茶淡饭，不离不弃的那个人，已经陪了你十年，&lt;strong&gt;卧槽，这么算算，真的幸福到爆！&lt;/strong&gt;。我从18岁，看着这个故事走到现在，结果最后的大剧照合影里没有我，&lt;strong&gt;妈蛋啊，真不甘心！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;末了。我其实也是个傻乎乎的人，我也准备了一份小小的稿子，打算到现场的时候，说给狐狸听。&lt;strong&gt;妈蛋的，稿子也没说，真不甘心啊：&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;想起七八年前，狐狸还喜欢染一头的红发，大晚上不好好上自习一群牲口出去喝酒，我真的记不起到底有几头牲口在场，我们在一起聊，梦想！对，一群不到十八岁的孩子不好好学习，跑出去喝酒还大谈梦想，大家一人一嘴不着实际的说着，轮到狐狸的时候，在那最最年轻无畏的时候，在那爱情超过全部的时候，狐狸说：&lt;strong&gt;她就是我的梦想！&lt;/strong&gt;或许狐狸不知道，他当时说出了我听过的最美的情话。
而现在，&lt;strong&gt;你的梦想实现了，祝贺你，新婚快乐，兄弟！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>给测试一个可以‘测试’的环境</title>
      <link>https://zllbird.github.io/2016/05/12/%E7%BB%99%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E6%B5%8B%E8%AF%95%E7%9A%84%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 12 May 2016 10:13:20 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/05/12/%E7%BB%99%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E6%B5%8B%E8%AF%95%E7%9A%84%E7%8E%AF%E5%A2%83/</guid>
      <description>

&lt;h2 id=&#34;给测试一个可以-测试-的环境:58aa416285a8b6da672fedefb2540a53&#34;&gt;给测试一个可以‘测试’的环境&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;也算是一点心得。随便聊几句，感受下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;现在的软件开发，至少有两个环境，一个是测试环境，用来开发、更改、调整代码，只提供给内部使用的环境。另一个是正式环境（线上环境），提供给外部使用的环境。当然，一般还有一个灰度测试环境，用于从测试环境到正式环境的缓冲带，给内部使用真实的环境。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;废话说完。
说实情，也是我准备更改的一件事情。&lt;strong&gt;不能给测试提供一个，可以有效用来进行测试的环境。&lt;/strong&gt;
测试本身，是存在大量重复和冗余工作，这点无法消除。但的确也存在，不必要的重复和冗余，导致测试的工作即便和饱和，但产品的质量却仍然得不到一个很好的保证。&lt;em&gt;（加上，我们的测试比较嫩，更容易被开发忽悠）。&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;提供给测试的环境不完整！&lt;/strong&gt;对于测试来说，这是一个相当大的拖累，对于项目来说，这是一个非常错误的信息，会让项目的所以协作者都误以为达到了某种节点或者里程碑，但事实上，这本就应该是未达到测试标准。偷换了概念，用不完整掩盖未达标，从而将工作转移到了修复和维护上，自然加重了测试的工作量。可怜的是，包括工程师在内，都不是有意为之，因为工程师在这个环节中，也是受害者——提测后的压力本就大于开发期的压力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提供给测试可以调控状况的能力！&lt;/strong&gt;在阶段性测试中，经常会遇到，由于这样那样的原因，导致测试频繁的（过度频繁的）要求开发提供响应的状况，双方都在这过程中产生大量的相互等待和相互影响，这是一种高额成本的损耗，而且相当没有意义。（简单举例说明，测试经常需要开发更改标志性时间戳，更改对应账号的参数，更改客户端请求不同服务器等）事实上，这不仅仅是损耗，还有可能在相互的更改中，忽略其他相关的问题。这点颇有心得，开发总会忽略一些调控状态的输出，但如果发生一个测试经常会要求更改的状况的话，开发本就应该提供相应的输出。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;给测试足够的否决权！&lt;/strong&gt;说完两个硬环境，说一个软环境。测试本身有否决开发的权利，当然这点我们团队做的有些缺陷，仍然在补全中，但毋庸置疑。而我这次想说的却是，测试也有相当一部分否决&lt;strong&gt;产品&lt;/strong&gt;的权利。这点我想了很久，对于小团队来说，测试是项目输出的第一道守护，很大程度上，测试对于项目输出的具体形态有着相当大影响，如此，否决&lt;strong&gt;产品&lt;/strong&gt;很大程度上能制约乱改乱加现象，同时也能维护住成本。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以，尽早构建CI，绝对是测试的福音。自动构建系统，至少满足两点。
1. &lt;strong&gt;不依赖开发，只需要开发做不定时的维护就可以。&lt;/strong&gt;
2. &lt;strong&gt;可以提供多种环境的构建。&lt;/strong&gt;
3. &lt;strong&gt;可以自动发布。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>对于项目维护的思考</title>
      <link>https://zllbird.github.io/2016/05/12/%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>Thu, 12 May 2016 10:11:31 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/05/12/%E5%AF%B9%E4%BA%8E%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4%E7%9A%84%E6%80%9D%E8%80%83/</guid>
      <description>

&lt;h2 id=&#34;对于项目维护的思考:864c5fb8efa8298af296d9c83121ecb7&#34;&gt;对于项目维护的思考&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;漫谈。
程序写多了，对于一个项目的维护久了，产生了一些特别不一样的想法，写下来，与人念叨念叨。&lt;/p&gt;

&lt;h3 id=&#34;实际开发:864c5fb8efa8298af296d9c83121ecb7&#34;&gt;实际开发&lt;/h3&gt;

&lt;p&gt;说维护，自然要从&lt;strong&gt;实际&lt;/strong&gt;开发说起。
特别的聊一下加粗的这两个字，&lt;strong&gt;实际&lt;/strong&gt;。
实际开发中，总是会有状况发生的，这是定律，所以，对于实际开发来说，我第一个想法就是短，准确说，别做太多事让整个开发周期拉长。短是方便控制，同时也便与紧急处理。实际落实过程中，总是会出现这样或者那样的妥协，我们尝试了很多办法去减少状况的发生，刚开始还不错，但随着这样或者那样制度的复杂度加深，效果却越来越小，甚至反弹。只能说，通过外力去减少异常状况的发生，有用，但没有那么有用。
所以，把目光转回来。
&lt;strong&gt;如何紧急处理紧急问题，成了实际开发中的最大的问题。&lt;/strong&gt;就如我刚才所说的那样，这其中总会掺杂着这样或者那样的妥协，这篇是技术文，暂时抛开产品的专业性，就技术而言。如何紧急处理问题？
1. 减少复杂度。（&lt;strong&gt;这是最最重要的一条&lt;/strong&gt;）在绝大多数情况下，我们处理的问题本身的复杂度，不会超越技术本身的承受力。（相信我，超过的问题，一般都会有更牛的人在前面帮你开拓了）所以，大多数看起来复杂到不可控的问题，都是由于我们的认知不够，有可能是认知缺失，也有可能是疏忽，所以看起来很复杂。但实际却经不起推敲。所以，减少复杂度，我给的建议很简单，找到相关的人，坐下来，重新梳理之后，做减法，减掉不必要的复杂选项后，再做修复。减少复杂，不代表肯定是减少功能，这几年和产品的博弈过程中，每次找产品，产品都觉得是我在减功能，囧。&lt;strong&gt;重申一遍，梳理逻辑才是重中之重。&lt;/strong&gt;
2. 解耦。紧急问题的处理，总会有那么一种‘写死’的方案，或者说，总有那么一种成本低但耦合度高的方案可以勉强解决问题。千万不要这么做，这就是‘泥石坑’（人月神话），除非你不考虑下个版本，否则，这只能让你下个月的工作大大增加。因为，你不得不用一个很高昂的成本来弥补你这个时候偷的懒。
3. 尽早寻求帮助。紧急的问题加上时间的压榨，很容易让身处‘局里’的人盲目或者过激。不理智是留下遗留问题的根源，这里我自身也犯下了好几次错误。不得不说，坦诚承认，然后及时向他人寻求帮助是最好的对策，保证项目是首要，至于那一点点羞耻心真的不重要。因为纸包不住火，维护的时候终究还是要面对的。&lt;/p&gt;

&lt;p&gt;其实，说了这么多，感觉都跑题了。其实，我想说，项目维护时流的汗水，都是开发时，你处理紧急问题时脑子进的水。
&lt;strong&gt;不顾以后的维护，只图解决眼下的问题，终究是要偿还的。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;实际维护:864c5fb8efa8298af296d9c83121ecb7&#34;&gt;实际维护&lt;/h3&gt;

&lt;p&gt;维护或者优化。最重要的是：&lt;strong&gt;千万改完一个bug，又改出来一个。&lt;/strong&gt;
然后，这个事情基本上是我所见到的实际维护过程中最高频率出现的事情之一。而其中大多数原因，就是缺少思考的修改了原来的代码。这么讲的话，难道维护或者优化的时候修复一个bug，要来来回回的思考和判断逻辑才能改原来的代码吗？全部这么做的话，成本岂不是太过于高昂了。
&lt;strong&gt;不好意思，的确是这样的。维护时期修复一个问题，要比开发时期困难很多很多。&lt;/strong&gt;在一个勉强称得上稳定的系统上（默认上线的版本是较为稳定的版本），是它变得更加稳定和可靠是一件很难得事情。因为任何的修改的前提是，不能破坏原来的稳定。一句，不能破坏原来的稳定，就是最大的成本。
同时，维护还要尽量保证后来的维护或者优化能顺利进行，所以刚才的123点同时也是要注意。
也再说几点我的心得。
1. 时间是最大的成本。相信没有真正的维护时期，都是或多或少掺杂着新的开发，所以所谓的维护时间，并没有想象中的那么长。同时，人们总有种倾向，会认为新开发的优先级会高于旧维护的，毕竟，一个已经有了只是存在问题，另一个还没有。这种倾向会传染，让我们不自主的给维护更少的时间。
2. 拒绝拖延。程序开发里有一个不成名的定律，但凡说，以后改的问题，最终也没有改。说下一次就修复的事情，再也没有出现过下一次。这是个很伤心的事情，人始终不断的尝试或者做新的事情，的确能获得很多，同样，在修复和更改中，也能获得同样多，但却很少有人这么做。鸡汤说完，说实情。如果旧的问题始终不处理，会导致新的功能的不完整，连带出来很多新的问题。很少有功能或者说需求是完全和旧版本脱离的，自然使用也要不断使用旧版本中已经完成的功能，所以，拖延只能导致不断前进的步伐陷入‘坑’，举步维艰。&lt;/p&gt;

&lt;p&gt;随便写点，先写这么多吧。&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>CI</title>
      <link>https://zllbird.github.io/2016/05/12/ci/</link>
      <pubDate>Thu, 12 May 2016 10:09:32 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2016/05/12/ci/</guid>
      <description>

&lt;h2 id=&#34;android-ios-双平台搭建ci心得-jenkins-gitlab-gradle-android-xcode-ios-fir-im-分发:fdf16477251a83f9aa87d6f1a4ff3aeb&#34;&gt;Android,iOS 双平台搭建CI心得（Jenkins + GitLab + Gradle(android)/Xcode(iOS) + fir.im(分发) ）&lt;/h2&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;概述:fdf16477251a83f9aa87d6f1a4ff3aeb&#34;&gt;概述&lt;/h3&gt;

&lt;p&gt;由于上一篇写到想尽早搭建移动端的CI，这两天便一直折腾。总算有点结果，至于细致下来，还需要一些时间去专门调整后，再移交个QA。
&lt;em&gt;去年写过一篇，关于使用jenkins如何为安卓搭建自动生成分发的平台，左边目录点击就能找到。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;自动构建平台：&lt;code&gt;jenkins&lt;/code&gt;
版本控制：&lt;code&gt;git&lt;/code&gt;
编译工具：&lt;code&gt;Gradle(android)&lt;/code&gt;/&lt;code&gt;Xcode(iOS)&lt;/code&gt;
分发工具：&lt;code&gt;fir.im - fir-cl&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;选择&lt;code&gt;jenkins&lt;/code&gt;主要考虑到它比较稳定，另外一点是可以兼顾两个平台，别的平台大多数都是偏向&lt;code&gt;android&lt;/code&gt;或者&lt;code&gt;iOS&lt;/code&gt;中一个。别的不用说，分发工具选择&lt;code&gt;fir&lt;/code&gt;,在实践中发觉fir平台很稳定，非常适合做分发平台，而且重要的是，&lt;strong&gt;免费&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&#34;android:fdf16477251a83f9aa87d6f1a4ff3aeb&#34;&gt;Android&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://zllbird.github.io/2015/11/30/android%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA/&#34;&gt;Android自动构建&lt;/a&gt;
这篇是我以前写的，是完全可行的。这里做一点改造。
为满足，不同构建生成不同环境的APK包，而减少QA与开发之间沟通，并同时满足后台需要特定环境调试。所以构建平台要能提供相应的项目，释放开发的压力。
具体改造：
1. 为&lt;code&gt;Gradle&lt;/code&gt;配置全局变量，然后方便管理启用环境。因为我是使用Gradle进行配置，所以也同样使用Gradle属性赋值直接进行环境的更改。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 在Gradle文件中，比如在我的项目中是 config.gradle

task serverName {
	println &amp;quot;SEVER IS ${SEVER_CONFIG_CI}&amp;quot;
}

# 配置 SEVER_CONFIG_CI 可以通过Gradle自定义属性，也可以通过JVM配置等，这里使用比较偷懒的方法，直接定义gradle中的属性配置,但要在前面添加ORG_GRADLE_PROJECT_作为前缀
export ORG_GRADLE_PROJECT_SEVER_CONFIG_CI = 2

#这个时候就可以直接在命令行里运行 gradle serverName ，就能看到 结果为SEVER IS 2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置完后，只需要在编译前，运行一次这个命令，就能提供相应的服务器环境了。
&lt;img src=&#34;https://zllbird.github.io/images/auto-ci/3.png&#34; alt=&#34;&#34; /&gt;
1. 将Gradle配置部署到jenkins上，一个项目对应一个环境，便于管理。具体步奏，在项目的配置中的&amp;gt;构建&amp;gt;增加构建步奏&amp;gt;Execute shell ,输入刚才提到的配置。
2. fir分发，用命令工具替换插件。原先用的插件支持并不友好（对我来说，命令行比较友好），所以这次fir提供了fir-cl工具后，便毅然决然的替换了原来的插件。步骤和2一样，只不过命令变成了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fir publish ${WORKSPACE}/app/build/outputs/apk/app-baidu-debug.apk -T {firToken}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，我是直接在构建中使用了，也可以选择构建后。如果选择构建后运操作&amp;gt;增加构建后操作步奏&amp;gt;Excute a set of scripts&amp;gt;Build steps （或者Add a shell 将写好的脚本上传）
&lt;img src=&#34;https://zllbird.github.io/images/auto-ci/2.png&#34; alt=&#34;&#34; /&gt;
最后立即构建，享受吧~~~&lt;/p&gt;

&lt;h3 id=&#34;ios:fdf16477251a83f9aa87d6f1a4ff3aeb&#34;&gt;iOS&lt;/h3&gt;

&lt;p&gt;iOS 由于编译软件的限制，所以只能有苹果系统，包含Xcode的机器才能集成这套CI。
对于jenkins的安装这里不重复了，想了解的仍然是点击左边目录，Android自动构建里有。
由于我的项目中有Cocopods，所以具体配置中有些坑要注意。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Git拉去源码时可能会出现。十分钟就断开，导致项目拉去始终失败的可能。这里需要在项目配置中源码管理&amp;gt;Additional Behaviours&amp;gt;Advanced clone behaviours&amp;gt;Timeout for clone and fetch operations 中填入一个较大的值，防止timeout。
&lt;img src=&#34;https://zllbird.github.io/images/auto-ci/4.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;构建中，选择Xcode。具体配置实例如下：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;Target: JenkinsCI
Clean before build? YES
Generate Archive? YES
Pack application and build .ipa? YES
.ipa filename pattern: ${VERSION}
Output directory: ${workspace}/Builds/${BUILD_NUMBER}/${BUILD_ID}
Unlock Keychain? YES
Keychain path: ${HOME}/Library/Keychains/login.keychain
Keychain password: your administrator user password
Xcode Schema File: JenkinsCI
Xcode Workspace File: ${WORKSPACE}/JenkinsCI
Xcode Project Directory: ${WORKSPACE}
Xcode Project File: ${WORKSPACE}/JenkinsCI
Build output directory: ${WORKSPACE}/Build
Provide version number and run avgtool? YES
Technical version: ${BUILD_ID}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;特别要注意xcode workspace file 。由于pod使用时是通过workspace而不是project，所以不配置这个，构建始终不会成功。
1. fir分发。与android一样，这里我用了上面提到的第二种方法。
   &lt;img src=&#34;https://zllbird.github.io/images/auto-ci/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;未解决的问题:fdf16477251a83f9aa87d6f1a4ff3aeb&#34;&gt;未解决的问题&lt;/h3&gt;

&lt;p&gt;iOS如何构建脚本生成不同环境。&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
  </channel>
</rss>