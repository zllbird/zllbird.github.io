<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Coder-bird</title>
    <link>https://zllbird.github.io/post/</link>
    <description>Recent content in Posts on Coder-bird</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Copyright Text</copyright>
    <lastBuildDate>Wed, 11 Nov 2015 09:53:37 +0800</lastBuildDate>
    <atom:link href="https://zllbird.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Git清理误传的文件</title>
      <link>https://zllbird.github.io/2015/11/11/git%E6%B8%85%E7%90%86%E8%AF%AF%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 11 Nov 2015 09:53:37 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2015/11/11/git%E6%B8%85%E7%90%86%E8%AF%AF%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6/</guid>
      <description>

&lt;h1 id=&#34;git清理误传的文件:2c3299dc152aba749c72550a3d365541&#34;&gt;Git清理误传的文件&lt;/h1&gt;

&lt;p&gt;​   Git进行版本管理的时候，项目中很多文件(配置文件，自动生成文件，构建生成文件，依赖包等)是不需要同步上传到服务器。一方面，造成文件的多余，另一方面，如本地配置文件（&lt;code&gt;local.properties&lt;/code&gt;），不同人员的来回提交，则会造成同步开发人员的版本混乱——不断地解决重复冲突，这是相当不值得的。&lt;/p&gt;

&lt;p&gt;​   Git提供了一种忽略机制——gitignore。本质上也是一种Git配置，类似于配置文件。将配置文件中相关文件忽略，写法与Android工程是熟悉的混淆配置文件（&lt;code&gt;proguard-rules.pro&lt;/code&gt;）非常相似。功能也是将&lt;code&gt;.gitignore&lt;/code&gt;里面配置好的文件忽略，或者说是剔除，不让此文件加入版本控制。&lt;/p&gt;

&lt;p&gt;​   关于gitignore的详细介绍请&lt;a href=&#34;http://git.oschina.net/progit/&#34;&gt;参考这里,第二章基础&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​   显然，对于我这种Git新手，很可能知道这些的时候，已经把配置文件都扔到服务器上了。然后，一阵胡搞乱搞…（都是满纸辛酸泪），其实根本原因还是对Git本身理解不够。接下来，简单介绍一下做法，以及远离。&lt;/p&gt;

&lt;p&gt;​   解决步奏：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将配置文件文件名（如&lt;code&gt;local.properties&lt;/code&gt;）放到.gitignore里。&lt;/li&gt;
&lt;li&gt;检查工作空间里是否还有这个文件（如，在配置文件里随便改点，然后，git status检查工作空间里是否存在）&lt;/li&gt;
&lt;li&gt;如果不存在，你可以关掉网页了。如果存在，备份，然后删除它！！！（直接在shell里rm）&lt;/li&gt;
&lt;li&gt;然后 add , commit ,push 一套走下来。&lt;/li&gt;
&lt;li&gt;查看远程git服务器端也没有这个文件。&lt;/li&gt;
&lt;li&gt;然后，把刚才备份的文件拿回来。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;写到这，突然觉得自己好无聊啊好无聊，这么特么的不就是删了就完了。好吧，我承认，这就是&amp;hellip;&lt;/p&gt;

&lt;p&gt;接下来说说我的理解，Git的版本控制其实本质上是对文件的操作跟踪。所以，一旦进入了版本控制，跟踪系统就会去记录它（这个文件）上发生的所有操作，即便把它放到忽略文件里也同样。因为忽略是晚于跟踪的，也就是说，只有未被跟踪的文件才有被忽略的权利。&lt;/p&gt;

&lt;p&gt;下面是 git status 中对于修改的文件和刚刚加入的文件的显示&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;images/git-untruck.png&#34; alt=&#34;git-untruck&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这个时候，上面两个文件是无法被忽略的，而add.txt，是可以被忽略的。&lt;/p&gt;

&lt;p&gt;这也刚才我们必须先删除，再拿回来的原因。&lt;/p&gt;

&lt;p&gt;附上Android常用的.gitgnore。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# built application files
*.ap_

# files for the dex VM
*.dex
*.iml

# Java class files
*.class

# generated files
bin/
gen/
*target/
*build/
*build*
.gradle/
.idea/

gen-external-apklibs/

# Local configuration file (sdk path, etc)
/library_wheel/build
local.properties

# Eclipse project files
.classpath
.project

# Mac os
.DS_Store

# DEBUG
captures/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>second</title>
      <link>https://zllbird.github.io/2015/11/03/second/</link>
      <pubDate>Tue, 03 Nov 2015 15:08:38 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2015/11/03/second/</guid>
      <description>

&lt;h1 id=&#34;想试一下自动部署脚本:9f7936f9b5c071ae81db818b80a44a0d&#34;&gt;想试一下自动部署脚本&lt;/h1&gt;

&lt;p&gt;还有大师傅的歌真的很不好听~~~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>执着</title>
      <link>https://zllbird.github.io/2015/11/02/%E6%89%A7%E7%9D%80/</link>
      <pubDate>Mon, 02 Nov 2015 16:35:33 +0800</pubDate>
      
      <guid>https://zllbird.github.io/2015/11/02/%E6%89%A7%E7%9D%80/</guid>
      <description>

&lt;h2 id=&#34;只是执着而已:c569c2cd856bd99d2e5fbc2283c59759&#34;&gt;只是执着而已&lt;/h2&gt;

&lt;p&gt;最近，&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>